# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-04 17:15
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GameTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('volume', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='GameType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LiveGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_time', models.DateTimeField()),
                ('is_processed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='NcaaGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('position_limit', models.IntegerField(blank=True, null=True)),
                ('points_limit', models.IntegerField(blank=True, null=True)),
                ('supports_cards', models.BooleanField(default=False)),
                ('supports_stocks', models.BooleanField(default=False)),
                ('settings_locked', models.BooleanField(default=False)),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='ncaacards.GameType')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('default_score', models.IntegerField()),
                ('ordering', models.IntegerField()),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_types', to='ncaacards.GameType')),
            ],
        ),
        migrations.CreateModel(
            name='ScoringSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ncaacards.NcaaGame')),
                ('scoreType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ncaacards.ScoreType')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=50)),
                ('abbrev_name', models.CharField(max_length=6)),
                ('is_eliminated', models.BooleanField(default=False)),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='ncaacards.GameType')),
            ],
        ),
        migrations.CreateModel(
            name='TeamScoreCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('scoreType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ncaacards.ScoreType')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counts', to='ncaacards.Team')),
            ],
        ),
        migrations.CreateModel(
            name='TradeComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TradeOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_time', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('accept_time', models.DateTimeField(blank=True, null=True)),
                ('cancel_on_game', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TradeSide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TradingBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_name', models.CharField(max_length=30)),
                ('extra_points', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('join_time', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='ncaacards.NcaaGame')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='ncaacards.UserEntry')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ncaacards.GameTeam')),
            ],
        ),
        migrations.AddField(
            model_name='tradingblock',
            name='entry',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trading_block', to='ncaacards.UserEntry'),
        ),
        migrations.AddField(
            model_name='tradingblock',
            name='game_teams_available',
            field=models.ManyToManyField(related_name='available_blocks', to='ncaacards.GameTeam'),
        ),
        migrations.AddField(
            model_name='tradingblock',
            name='game_teams_desired',
            field=models.ManyToManyField(related_name='desired_blocks', to='ncaacards.GameTeam'),
        ),
        migrations.AddField(
            model_name='tradeoffer',
            name='accepting_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accepted_trades', to='ncaacards.UserEntry'),
        ),
        migrations.AddField(
            model_name='tradeoffer',
            name='ask_side',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ask_offer', to='ncaacards.TradeSide'),
        ),
        migrations.AddField(
            model_name='tradeoffer',
            name='bid_side',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bid_offer', to='ncaacards.TradeSide'),
        ),
        migrations.AddField(
            model_name='tradeoffer',
            name='entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposed_trades', to='ncaacards.UserEntry'),
        ),
        migrations.AddField(
            model_name='tradecomponent',
            name='offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='ncaacards.TradeSide'),
        ),
        migrations.AddField(
            model_name='tradecomponent',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ncaacards.GameTeam'),
        ),
        migrations.AddField(
            model_name='livegame',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_games', to='ncaacards.Team'),
        ),
        migrations.AddField(
            model_name='livegame',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_games', to='ncaacards.Team'),
        ),
        migrations.AddField(
            model_name='gameteam',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ncaacards.NcaaGame'),
        ),
        migrations.AddField(
            model_name='gameteam',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ncaacards.Team'),
        ),
        migrations.AlterUniqueTogether(
            name='userentry',
            unique_together=set([('game', 'entry_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together=set([('abbrev_name', 'game_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='scoretype',
            unique_together=set([('ordering', 'game_type')]),
        ),
    ]
